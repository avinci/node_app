# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# Integrations are used to connect external resources to CI
# http://docs.shippable.com/integrations/overview/
integrations:
  # adding docker hub integration so that credentials are available to CI Job
  # http://docs.shippable.com/platform/integration/dockerRegistryLogin/
  hub:
    - integrationName: avinci_dh
      type: dockerRegistryLogin

# use this to control what branches get built.
# http://docs.shippable.com/ci/advancedOptions/branches/
branches:
  only:
    - master
    - dev

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
    - DOCKER_REPO="node_app"
    - DOCKER_ACC=avinci # {account name}
    - SHIP_IMG_RES=$DOCKER_REPO"_img_dh"

build:
  # http://docs.shippable.com/ci/shippableyml/#ci
  ci:
    # npm mirrors can sometimes be flacky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    - shipctl retry "npm install"
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - popd

  # http://docs.shippable.com/ci/shippableyml/#post_ci
  post_ci:
    - docker build -t $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER .
    - if [ "$IS_PULL_REQUEST" != true ]; then docker push $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER; fi
    
  #this will be ignored if you are not using Assembly Lines to trigger another job after ci  
  on_success:
    - if [ "$IS_PULL_REQUEST" != true ]; then shipctl put_resource_state $SHIP_IMG_RES versionName $BRANCH.$BUILD_NUMBER; fi

resources:
  - name: node_app_img_dh
    type: image
    integration: avinci_dh # replace with your integration name
    versionTemplate:
      sourceName: "avinci/node_app" # replace with your Hub URL
      isPull: false
      versionName: latest

# REPO of kube configs
  - name: config_repo
    type: gitRepo
    integration: "demo_gh"
    versionTemplate:
      sourceName: "avinci/cd_gke_kubectl"
      branch: master

# GKE cluster info
  - name: dev_cluster
    type: cluster
    integration: "dr_avi"
    pointer:
      sourceName: "cluster"
      region: "us-west1-a"

  - name: prod_cluster
    type: cluster
    integration: "dr_avi"
    pointer:
      sourceName: "cluster"
      region: "us-west1-a"

  - name: prod_trig
    type: param
    versionTemplate:
      params:
        DUMMY: "seed"

  - name: dev_trig
    type: param
    versionTemplate:
      params:
        DUMMY: "seed"

jobs:
  - name: node_app_runCI
    type: runCI
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - OUT: node_app_img_dh
    flags:
      - node_app

  - name: app_manifest
    type: manifest
    steps:
      - IN: node_app_img_dh
        switch: off

  - name: test_kctl
    type: runSh
    steps:
      - IN: app_manifest
      - IN: node_app_img_dh
        switch: off
      - TASK:
          name: test
          runtime:
            options:
              env:
                - TRIG_RES: "dev_trig"
          script:
            - export APP_TAG=$(shipctl get_resource_version_key node_app_img_dh versionName)
            - if [[ $APP_TAG = *"master"* ]]; then export TRIG_RES="prod_trig"; fi
            - shipctl put_resource_state $TRIG_RES versionName $APP_TAG
      - OUT: prod_trig
      - OUT: dev_trig

  - name: dev_deploy
    type: deploy
    steps:
      - IN: dev_trig
      - IN: dev_cluster
        switch: off
      - IN: app_manifest
        switch: off

  - name: prod_deploy
    type: deploy
    steps:
      - IN: prod_trig
      - IN: prod_cluster
        switch: off
      - IN: app_manifest
        switch: off
